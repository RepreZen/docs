<!DOCTYPE HTML>
<html>
<head>
   <!-- Original title below -->
   <!--title>Resolving Ambiguous Data Type References</title-->
   <!-- Add title to each page followed by topic title -->
   <title>RepreZen API Studio Quick Start Guide &raquo; Resolving Ambiguous Data Type References</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="accessible,masking" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />   
   <meta http-equiv="X-UA-Compatible" content="IE=edge" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <link type="text/css" href="custom.css" rel="stylesheet">

   <style TYPE="text/css" media="screen"> 
      html, body { margin:0; 
             padding:0; 
             overflow: hidden; 
             background: #FFFFFF; 
       } 

      div#printheader { display: none; }
      #idheader { width:100%; 
                  height:auto; 
                  padding: 0; 
                  margin: 0; 
       } 
      #idcontent { position:relative }                                               
      #callout-table, #overview-table {display:block; position:relative; top:0; left:0;}
      #callout-icon {display:block; position:absolute; top:-11px; left:-11px;}
      #callout-icon-flag {display:block; position:absolute; top:-11px; left:-8px;}
      #callout-table a {text-decoration: none; color: blue;}
      #callout-table a:visited {text-decoration: none; color: blue;}
      #overview-table a {text-decoration: none; color: black;}
      #overview-table a:visited {text-decoration: none; color: black;}
      #callout-table a:hover, #overview-table a:hover {text-decoration: underline;}      
      #switchtoggles { text-align: right; padding: 0 5px 0 0; font-size: 90%; } 
      p.help-url { margin: 20px 0 5px 0; text-align: center; font-size: 80%; text-decoration: none }
      .sync-toc { color: #ffffff; font-size: 8pt; font-weight: bold; display: none; }
      .sync-toc a { color: #ffffff; text-decoration: none; font-weight: bold;}
      .sync-toc a:visited { color: #ffffff; }
      .sync-toc a:hover { text-decoration: underline; }
      #footer {position: relative;
	margin-top: -100px; /* negative value of footer height */
	height: 100px;
	clear:both;} 
   </style>
   <noscript>
   <style type="text/css">
   html, body { overflow: auto; }
   </style> 
   </noscript>
   <style type="text/css" media="print">
      span.f_Heading1 { color: black; }
      #idheader, #printheader img { display:none; }
      #printheader { display: block; margin-top: 20px; }
      #idcontent { margin-top: 10px; position:relative }
   </style>   

   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>
   <script type="text/javascript" src="nsh.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "resolving_ambiguous_data_type_references.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body>


<div id="printheader"><h1 class="p_Heading1"><span class="f_Heading1">Resolving Ambiguous Data Type References</span></h1>
</div>
<div id="idheader">
<div id="idheaderbg">
<table style="width:100%;border:none;margin:0px;background:url(background.jpg)" cellspacing="0" cellpadding="0"> 
  <tr valign="bottom">
    <td align="left" valign="bottom" class="topichead">
   <p class="sync-toc">&lt;&lt; <a rel="nofollow" href="index.html?resolving_ambiguous_data_type_references.htm" target="_top">Click to Display Table of Contents</a> &gt;&gt;</p>
   <p class="crumbs" id="idnav"><b>Navigation:</b>&nbsp;
   &raquo;No topics above this level&laquo;
   </p>
   <h1 class="p_Heading1"><span class="f_Heading1">Resolving Ambiguous Data Type References</span></h1>

    </td>
    <td align="right" width="120" valign="middle" class="topichead" id="idnav">
    <!-- Navigation Buttons ~ previous and next -->
    
    
     <a href="customising_data_type_realisat.htm"
        onmouseover="document.images.prev.src='hm_btn_navigate_prev_orange.png'" 
        onmouseout="document.images.prev.src='hm_btn_navigate_prev.png'"
        ><img name="prev" src="hm_btn_navigate_prev.png" border=0 alt="Previous page"
        ></a><a href="introduction.htm"
        onmouseover="document.images.main.src='hm_btn_navigate_top_orange.png'" 
        onmouseout="document.images.main.src='hm_btn_navigate_top.png'"><img name=main src="hm_btn_navigate_top.png" border=0 alt="Return to chapter overview"
        ></a><a href="using_the_mock_server.htm"
        onmouseover="document.images.next.src='hm_btn_navigate_next_orange.png'" 
        onmouseout="document.images.next.src='hm_btn_navigate_next.png'"><img name=next src="hm_btn_navigate_next.png" border=0 alt="Next page"
        ></a>
    
    </td>
  </tr>  
</table>
<!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
  
</div>
</div>  

<div id="idcontent"><div id="innerdiv">
<!-- Ask Internet Explorer 6.users to update their obsolete and dangerous browser --> 
<!--[if lt IE 7]><div style=' clear: both; height: 59px; padding:0 0 0 15px; position: relative;'><a href="http://windows.microsoft.com/en-US/internet-explorer/products/ie/home?ocid=ie6_countdown_bannercode"><img src="http://storage.ie6countdown.com/assets/100/images/banners/warning_bar_0000_us.jpg" border="0" height="42" width="820" alt="You are using an outdated browser. For a faster, safer browsing experience, upgrade for free today." /></a></div><![endif]-->

<!--ZOOMRESTART-->
<p>This section explains how to deal with ambiguous data type references - when we use data types that are present in two or more <a href="http://rapid-api.org/rapid-ml/spec/current/desktop/index.html?terminology.htm#accessible" target="_blank" class="weblink" title="Terminology: accessible">accessible</a> models.</p>
<p>Let's introduce another, slightly different <span class="f_ModelElementName">Person</span> structure into our <span class="f_ModelElementName">TaxBlaster</span> <span class="f_Keyword">rapidModel</span>. Add the following below <span class="f_ModelElementName">TaxFiling</span>:</p>
<p class="p_CodeExample"><span class="f_Syntax-keyword">structure</span><span class="f_CodeExample">&nbsp;</span><span class="f_Syntax-ModelElementName">Person</span></p>
<p class="p_CodeExample"><span style="width:18px">&nbsp;</span><span class="f_CodeExample">name&nbsp;:&nbsp;string</span></p>
<p class="p_CodeExample"><span style="width:18px">&nbsp;</span><span class="f_CodeExample">birthday&nbsp;:&nbsp;string</span></p>
<p>This will cause the <span class="f_Keyword">structure</span> defined in our shared, common <span class="f_Keyword">dataModel</span>, to be masked so that we get errors (lots of errors):<br />
&nbsp;<br />
 <img src="resolvingambigdatarefs_01.png" width="689" height="515" alt="ResolvingAmbigDataRefs_01" style="width:689px;height:515px;border:none" /></p>
<p>The masking occurs because all references to <span class="f_ModelElementName">Person</span> in our code are unqualified, so they resolve to the definition in the same file instead of the one in the imported, common <span class="f_Keyword">dataModel</span>. &nbsp;The resolved definition of <span class="f_ModelElementName">Person</span> does not have the same properties as those referenced in our API, so we get errors.</p>
<p>To overcome this problem we need to fully qualify our usages of <span class="f_ModelElementName">Person</span> so that the one from our shared <span class="f_Keyword">dataModel</span> is selected. Let's start with the usage in the <span class="f_ModelElementName">PersonObject</span> resource. Currently this is</p>
<p class="p_Syntax-ModelElementName"><span class="f_Syntax-keyword">objectResource</span><span class="f_Syntax-ModelElementName">&nbsp;PersonObject&nbsp;</span><span class="f_Syntax-keyword">type</span><span class="f_Syntax-ModelElementName">&nbsp;</span><span class="f_CodeExample">Person</span></p>
<p>Double-click <span class="f_ModelElementName">Person</span> to highlight it and use Code Assist to select <span class="f_CodeExample">Person</span> - <span class="f_CodeExample">com.modelsolv.quickstart.CommonDataModel.GeneralTypes.Person</span> from the list.</p>
<p>The first line of our <span class="f_ModelElementName">PersonObject</span> resource declaration now looks as follows (and the errors in the <span class="f_ModelElementName">PersonObject </span>resource should now disappear):</p>
<p class="p_CodeExample" style="white-space: normal;"><span class="f_Syntax-keyword">objectResource</span><span class="f_CodeExample"> PersonObject </span><span class="f_Syntax-keyword">type</span><span class="f_CodeExample"> com.modelsolv.quickstart.CommonDataModel.GeneralTypes.Person</span></p>
<p>&nbsp;<br />
Before we fix the other errors let's make things a bit easier by aliasing our imported data model.</p>
<p class="p_Heading2_atoc_"><span class="f_Heading2_atoc_">Aliasing our imports</span></p>
<p>As you can see, RepreZen™ API Studio qualified names can pretty rapidly become rather long-winded. To make things a bit more user-friendly we can use aliasing to shorten the string needed to disambiguate <span class="f_Keyword">structure</span> usages. &nbsp;For example the <span class="f_Keyword">import</span> statement:<br />
&nbsp;<br />
<span class="f_Syntax-keyword">import</span><span class="f_CodeExample"> com.modelsolv.quickstart.CommonDataModel.GeneralTypes </span><span class="f_Syntax-keyword">from</span><span class="f_CodeExample"> </span><span class="f_Syntax-stringLiteral">&quot;CommonDataModel.rapid&quot;</span></p>
<p>can be aliased like <span style="background-color: #ffff00;">this</span>:<br />
&nbsp;<br />
<span class="f_Syntax-keyword">import</span><span class="f_CodeExample"> com.modelsolv.quickstart.CommonDataModel.GeneralTypes </span><span class="f_Syntax-keyword">from</span><span class="f_CodeExample"> </span><span class="f_Syntax-stringLiteral">&quot;CommonDataModel.rapid&quot;</span><span class="f_CodeExample"> </span><span class="f_Syntax-keyword" style="background-color: #ffff00;">as</span><span class="f_CodeExample" style="background-color: #ffff00;">&nbsp;common</span></p>
<p>Now we can update PersonObject to use the alias like this:</p>
<p class="p_CodeExample"><span class="f_Syntax-keyword">objectResource</span><span class="f_CodeExample">&nbsp;PersonObject&nbsp;</span><span class="f_Syntax-keyword">type</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="background-color: #ffff00;">common</span><span class="f_CodeExample">.Person</span></p>
<p class="p_Heading2_atoc_"><span class="f_Heading2_atoc_">Fixing the remaining errors</span></p>
<p>The remaining errors in our model are all in <span class="f_ModelElementName">TaxFilingObject</span>, which knows about the <span class="f_ModelElementName">Person </span>type indirectly via the <span class="f_Keyword">reference</span> property in the <span class="f_ModelElementName">TaxFiling</span> <span class="f_Keyword">structure</span>. Once the reference property is also fully qualified, the properties are resolved and the marked errors disappear.</p>
<p><img src="resolvingambigdatarefs_01.1.png" width="689" height="515" alt="ResolvingAmbigDataRefs_01.1" style="width:689px;height:515px;border:none" /></p>
<p class="p_Heading2_atoc_"><span class="f_Heading2_atoc_">Further masking issues</span></p>
<p>Although the <span class="f_Keyword">rapidModel</span> now no longer <span style="font-style: italic;">appears</span> to contain errors, all is not well. We still have references to <span class="f_ModelElementName">Person</span> which are resolving incorrectly to the local, as opposed to the imported, type. You can see this if you look at the <span class="f_WindowName">Diagram View</span>. The <span class="f_ModelElementName">PersonCollection</span> has the <span style="font-style: italic;">wrong</span> kind of <span class="f_ModelElementName">Person</span> embedded in it:<br />
&nbsp;<br />
<img src="resolvingambigdatarefs_02.png" width="268" height="254" alt="ResolvingAmbigDataRefs_02" style="width:268px;height:254px;border:none" /></p>
<p>We have already corrected a data type reference in the <span class="f_ModelElementName">PersonObject</span> resource, and another one in the <span class="f_ModelElementName">TaxFiling </span><span class="f_Keyword">structure</span>. &nbsp;Looking at the diagram, we see an additional resource (<span class="f_ModelElementName">PersonCollection</span>) &nbsp;and an additional structure (<span class="f_ModelElementName">Index</span>) that also need correction. If we qualify these usages, again by using the alias we just introduced, then everything slips into place:<br />
&nbsp;<br />
<img src="resolvingambigdatarefs_03.png" width="759" height="830" alt="ResolvingAmbigDataRefs_03" style="width:759px;height:830px;border:none" /></p>
<p>Note that the local <span class="f_ModelElementName">Person</span> <span class="f_Keyword">structure</span> has now disappeared from view because this is a diagram of our <span class="f_Keyword">resourceAPI</span> and not a diagram of our <span class="f_Keyword">dataModel.</span> The diagram, therefore, only shows data types from accessible data models if they are used by the API.</p>

<table width="100%">
       <tr />
       <tr>
           <td style="font-size:small">
             Copyright © 2016 ModelSolv, Inc. &nbsp;All rights reserved. RepreZen and RAPID-ML are trademarks of ModelSolv, Inc. Swagger is a registered trademark of SmartBear Software, Inc. RepreZen API Studio is not associated with nor endorsed by SmartBear Software, Inc.
           </td>
       </tr>  
<table>
<!--ZOOMSTOP-->
</div></div>
<script type="text/javascript">

var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
{
 if (document.all) setTimeout(function() {nsrInit();},20); 
    else nsrInit();
 } 

if ((!parent.hmNavigationFrame) && (parent.location) && (parent.location.href)) { $('.sync-toc').show();$('p.crumbs').hide();}
var baseurl = document.URL.substring(0,document.URL.lastIndexOf("/")+1); 
$('#idcontent').append('<p class="help-url"><b>URL of this page:&nbsp;</b><a href="'+baseurl+'index.html' +
'?resolving_ambiguous_data_type_references.htm" target="_top">'+baseurl+'index.html?resolving_ambiguous_data_type_references.htm</a></p>');

</script>
</body>
</html>
